export interface StringWriter {
    writeString(data: string): void;
}
interface SubtleCryptoLike {
    digest(algorithm: AlgorithmIdentifier, data: BufferSource): Promise<ArrayBuffer>;
}
export type FieldHasher = (data: StringWriter) => void;
export declare function bool(key: string, value: boolean): FieldHasher;
export declare function uint32(key: string, value: number): FieldHasher;
export declare function string(key: string, value: string): FieldHasher;
export declare function stringSliceOrdered(key: string, values: string[]): FieldHasher;
export declare function makeHasher(subtle: SubtleCryptoLike): (...hashers: FieldHasher[]) => Promise<string>;
export {};
